<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leverTsui</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.leverTsui.com/"/>
  <updated>2017-11-05T04:27:03.000Z</updated>
  <id>http://www.leverTsui.com/</id>
  
  <author>
    <name>leverTsui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS二维码识别/二维码生成</title>
    <link href="http://www.leverTsui.com/2017/11/03/hello-world/"/>
    <id>http://www.leverTsui.com/2017/11/03/hello-world/</id>
    <published>2017-11-03T12:42:00.000Z</published>
    <updated>2017-11-05T04:27:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前做过一个关于二维码的组件，已发布，现总结下。<br>开发的<code>APP</code>所需支持的最低版本为<code>8.0</code>，最初的方案为扫描使用苹果自带的<code>API</code>实现扫一扫的功能、使用<code>ZXing</code>识别从相册或别人转发的二维码图片。但发现<code>ZXing</code>识别从相册中来的图片性能很差，很多图片识别不了，且耗时较长，遂使用<code>ZBar</code>来实现识别从相册或别人转发的二维码图片。<br>这个组件重要实现了三个功能，扫一扫识别二维码图片、长按图片识别二维码图片和生成二维码图片。<br>首先来看下扫一扫识别二维码图片的代码实现：</p><h4 id="扫一扫识别二维码图片"><a href="#扫一扫识别二维码图片" class="headerlink" title="扫一扫识别二维码图片"></a>扫一扫识别二维码图片</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)initCapture &#123;</div><div class="line">    <span class="built_in">AVCaptureDevice</span>* inputDevice =</div><div class="line">    [<span class="built_in">AVCaptureDevice</span> defaultDeviceWithMediaType:<span class="built_in">AVMediaTypeVideo</span>]; </div><div class="line">    [inputDevice lockForConfiguration:<span class="literal">nil</span>];</div><div class="line">    <span class="keyword">if</span> ([inputDevice hasTorch])&#123;</div><div class="line">        inputDevice.torchMode = <span class="built_in">AVCaptureTorchModeAuto</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">AVCaptureFocusMode</span> foucusMode = <span class="built_in">AVCaptureFocusModeContinuousAutoFocus</span>;</div><div class="line">    <span class="keyword">if</span> ([inputDevice isFocusModeSupported:foucusMode]) &#123;</div><div class="line">        inputDevice.focusMode = foucusMode;</div><div class="line">    &#125;</div><div class="line">    [inputDevice unlockForConfiguration];</div><div class="line">    </div><div class="line">    <span class="built_in">AVCaptureDeviceInput</span> *captureInput =</div><div class="line">    [<span class="built_in">AVCaptureDeviceInput</span> deviceInputWithDevice:inputDevice error:<span class="literal">nil</span>];</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (!captureInput) &#123;</div><div class="line">        <span class="comment">//支持的最低版本为iOS8</span></div><div class="line">        <span class="built_in">UIAlertController</span> *alterVC = [<span class="built_in">UIAlertController</span> alertControllerWithTitle:MUIQRCodeLocalizedString(<span class="string">@"ScanViewController_system_tip"</span>) message:MUIQRCodeLocalizedString(<span class="string">@"ScanViewController_camera_permission"</span>) preferredStyle:<span class="built_in">UIAlertControllerStyleAlert</span>];</div><div class="line">        <span class="built_in">UIAlertAction</span> *confirmAction = [<span class="built_in">UIAlertAction</span> actionWithTitle:MUIQRCodeLocalizedString(<span class="string">@"ScanViewController_yes"</span>) style:<span class="built_in">UIAlertActionStyleDefault</span> handler:<span class="literal">nil</span>];</div><div class="line">        [alterVC addAction:confirmAction];</div><div class="line">        [<span class="keyword">self</span> presentViewController:alterVC animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</div><div class="line">        [<span class="keyword">self</span>.activityView stopAnimating];</div><div class="line">        [<span class="keyword">self</span> onVideoStart:<span class="literal">nil</span>];</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="built_in">AVCaptureMetadataOutput</span> *captureOutput = [[<span class="built_in">AVCaptureMetadataOutput</span> alloc] init];</div><div class="line">    [captureOutput setMetadataObjectsDelegate:<span class="keyword">self</span> queue:_queue];</div><div class="line">    <span class="keyword">self</span>.captureOutput = captureOutput;</div><div class="line">    </div><div class="line">    <span class="keyword">self</span>.captureSession = [[<span class="built_in">AVCaptureSession</span> alloc] init];</div><div class="line">    [<span class="keyword">self</span>.captureSession addInput:captureInput];</div><div class="line">    [<span class="keyword">self</span>.captureSession addOutput:captureOutput];</div><div class="line">    </div><div class="line">    <span class="built_in">CGFloat</span> w = <span class="number">1920.</span>f;</div><div class="line">    <span class="built_in">CGFloat</span> h = <span class="number">1080.</span>f;</div><div class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span>.captureSession canSetSessionPreset:<span class="built_in">AVCaptureSessionPreset1920x1080</span>]) &#123;</div><div class="line">        <span class="keyword">self</span>.captureSession.sessionPreset = <span class="built_in">AVCaptureSessionPreset1920x1080</span>;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([<span class="keyword">self</span>.captureSession canSetSessionPreset:<span class="built_in">AVCaptureSessionPreset1280x720</span>]) &#123;</div><div class="line">        <span class="keyword">self</span>.captureSession.sessionPreset = <span class="built_in">AVCaptureSessionPreset1280x720</span>;</div><div class="line">        w = <span class="number">1280.</span>f;</div><div class="line">        h = <span class="number">720.</span>f;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([<span class="keyword">self</span>.captureSession canSetSessionPreset:<span class="built_in">AVCaptureSessionPreset640x480</span>]) &#123;</div><div class="line">        <span class="keyword">self</span>.captureSession.sessionPreset = <span class="built_in">AVCaptureSessionPreset640x480</span>;</div><div class="line">        w = <span class="number">960.</span>f;</div><div class="line">        h = <span class="number">540.</span>f;</div><div class="line">    &#125;</div><div class="line">    captureOutput.metadataObjectTypes = [captureOutput availableMetadataObjectTypes];</div><div class="line">    <span class="built_in">CGRect</span> bounds = [[<span class="built_in">UIScreen</span> mainScreen] bounds];</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.prevLayer) &#123;</div><div class="line">        <span class="keyword">self</span>.prevLayer = [<span class="built_in">AVCaptureVideoPreviewLayer</span> layerWithSession:<span class="keyword">self</span>.captureSession];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">self</span>.prevLayer.frame = bounds;</div><div class="line">    <span class="keyword">self</span>.prevLayer.videoGravity = <span class="built_in">AVLayerVideoGravityResizeAspectFill</span>;</div><div class="line">    [<span class="keyword">self</span>.view.layer insertSublayer:<span class="keyword">self</span>.prevLayer atIndex:<span class="number">0</span>];</div><div class="line">    <span class="comment">//下面代码主要用来设置扫描的聚焦范围，计算rectOfInterest</span></div><div class="line">    <span class="built_in">CGFloat</span> p1 = bounds.size.height/bounds.size.width;</div><div class="line">    <span class="built_in">CGFloat</span> p2 = w/h;</div><div class="line">    </div><div class="line">    <span class="built_in">CGRect</span> cropRect = <span class="built_in">CGRectMake</span>(<span class="built_in">CGRectGetMinX</span>(_cropRect) - kSNReaderScanExpandWidth, <span class="built_in">CGRectGetMinY</span>(_cropRect) - kSNReaderScanExpandHeight, <span class="built_in">CGRectGetWidth</span>(_cropRect) + <span class="number">2</span>*kSNReaderScanExpandWidth, <span class="built_in">CGRectGetHeight</span>(_cropRect) + <span class="number">2</span>*kSNReaderScanExpandHeight);</div><div class="line">    </div><div class="line"><span class="comment">//    CGRect cropRect = _cropRect;</span></div><div class="line">    <span class="keyword">if</span> (fabs(p1 - p2) &lt; <span class="number">0.00001</span>) &#123;</div><div class="line">        captureOutput.rectOfInterest = <span class="built_in">CGRectMake</span>(cropRect.origin.y /bounds.size.height,                         cropRect.origin.x/bounds.size.width,</div><div class="line">                                                  cropRect.size.height/bounds.size.height,</div><div class="line">                                                  cropRect.size.width/bounds.size.width);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (p1 &lt; p2) &#123;</div><div class="line">        <span class="comment">//实际图像被截取一段高</span></div><div class="line">        <span class="built_in">CGFloat</span> fixHeight = bounds.size.width * w / h;</div><div class="line">        <span class="built_in">CGFloat</span> fixPadding = (fixHeight - bounds.size.height)/<span class="number">2</span>;</div><div class="line">        captureOutput.rectOfInterest = <span class="built_in">CGRectMake</span>((cropRect.origin.y + fixPadding)/fixHeight,</div><div class="line">                                                  cropRect.origin.x/bounds.size.width,</div><div class="line">                                                  cropRect.size.height/fixHeight,</div><div class="line">                                                  cropRect.size.width/bounds.size.width);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">CGFloat</span> fixWidth = bounds.size.height * h / w;</div><div class="line">        <span class="built_in">CGFloat</span> fixPadding = (fixWidth - bounds.size.width)/<span class="number">2</span>;</div><div class="line">        captureOutput.rectOfInterest = <span class="built_in">CGRectMake</span>(cropRect.origin.y/bounds.size.height,</div><div class="line">                                                  (cropRect.origin.x + fixPadding)/fixWidth,</div><div class="line">                                                  cropRect.size.height/bounds.size.height,</div><div class="line">                                                  cropRect.size.width/fixWidth);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="识别二维码图片"><a href="#识别二维码图片" class="headerlink" title="识别二维码图片"></a>识别二维码图片</h4><p>识别二维码图片的功能，最初的方案是使用三方库<code>ZXing</code>来实现，因为<code>ZXing</code>有人在维护，但<code>ZXing</code>识别相册中的二维码图片或本地的图片时，有些图片根本就识别不出来，且耗时较长，所以改为使用<code>ZBar</code>。在网上找到一篇文章<a href="http://adad184.com/2015/09/30/goodbye-zxing/" target="_blank" rel="external">再见ZXing 使用系统原生代码处理QRCode</a>,实测发现使用系统原生代码来识别二维码图片时，在，iphone4s，系统为iOS的手机发现传回来的数组为空。代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)decodeQRImageWith:(<span class="built_in">UIImage</span>*)aImage &#123;</div><div class="line">    <span class="built_in">NSString</span> *qrResult = <span class="literal">nil</span>; </div><div class="line">    <span class="comment">//iOS8及以上可以使用系统自带的识别二维码图片接口，但此api有问题，在一些机型上detector为nil。 </span></div><div class="line">    <span class="keyword">if</span> (iOS8_OR_LATER) &#123; </div><div class="line">          <span class="built_in">CIContext</span> *context = [<span class="built_in">CIContext</span> contextWithOptions:<span class="literal">nil</span>];</div><div class="line">          <span class="built_in">CIDetector</span> *detector = [<span class="built_in">CIDetector</span> detectorOfType:<span class="built_in">CIDetectorTypeQRCode</span> context:context options:@&#123;<span class="built_in">CIDetectorAccuracy</span>:<span class="built_in">CIDetectorAccuracyHigh</span>&#125;];</div><div class="line">          <span class="built_in">CIImage</span> *image = [<span class="built_in">CIImage</span> imageWithCGImage:aImage.CGImage];</div><div class="line">          <span class="built_in">NSArray</span> *features = [detector featuresInImage:image];</div><div class="line">          <span class="built_in">CIQRCodeFeature</span> *feature = [features firstObject]; </div><div class="line">          qrResult = feature.messageString;</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">          ZBarReaderController* read = [ZBarReaderController new];</div><div class="line">          <span class="built_in">CGImageRef</span> cgImageRef = aImage.CGImage;</div><div class="line">          ZBarSymbol* symbol = <span class="literal">nil</span>;</div><div class="line">          <span class="keyword">for</span>(symbol <span class="keyword">in</span> [read scanImage:cgImageRef]) <span class="keyword">break</span>;</div><div class="line">             qrResult = symbol.data ;</div><div class="line">            <span class="keyword">return</span> qrResult;</div><div class="line">     &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p><p>无图无真相：</p><p><img src="http://upload-images.jianshu.io/upload_images/117999-5dae9fc15755140c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="14567CBE-E1D2-4FA7-AFA3-8B2037171F38.jpg"> </p><p>detector的值为nil，也就是说 </p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">CIDetector</span> *detector = [<span class="built_in">CIDetector</span> detectorOfType:<span class="built_in">CIDetectorTypeQRCode</span> context:context options:@&#123;<span class="built_in">CIDetectorAccuracy</span>:<span class="built_in">CIDetectorAccuracyHigh</span>&#125;];</div></pre></td></tr></table></figure><p>CIDetector的初始化方法无效。推测是苹果API的问题。 </p><h4 id="生成二维码图片"><a href="#生成二维码图片" class="headerlink" title="生成二维码图片"></a>生成二维码图片</h4><p>在<code>iOS8</code>及以上版本使用苹果的<code>API</code>生成二维码图片，代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">UIImage</span> *)encodeQRImageWithContent:(<span class="built_in">NSString</span> *)content size:(<span class="built_in">CGSize</span>)size &#123;</div><div class="line">    <span class="built_in">UIImage</span> *codeImage = <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">if</span> (iOS8_OR_LATER) &#123;</div><div class="line">        <span class="built_in">NSData</span> *stringData = [content dataUsingEncoding: <span class="built_in">NSUTF8StringEncoding</span>]; </div><div class="line">        <span class="comment">//生成</span></div><div class="line">      <span class="built_in">CIFilter</span> *qrFilter = [<span class="built_in">CIFilter</span> filterWithName:<span class="string">@"CIQRCodeGenerator"</span>];</div><div class="line">      [qrFilter setValue:stringData forKey:<span class="string">@"inputMessage"</span>];</div><div class="line">      [qrFilter setValue:<span class="string">@"M"</span> forKey:<span class="string">@"inputCorrectionLevel"</span>];</div><div class="line">      <span class="built_in">UIColor</span> *onColor = [<span class="built_in">UIColor</span> blackColor];</div><div class="line">      <span class="built_in">UIColor</span> *offColor = [<span class="built_in">UIColor</span> whiteColor];</div><div class="line">      <span class="comment">//上色</span></div><div class="line">      <span class="built_in">CIFilter</span> *colorFilter = [<span class="built_in">CIFilter</span> filterWithName:<span class="string">@"CIFalseColor"</span></div><div class="line">                                         keysAndValues:</div><div class="line">                               <span class="string">@"inputImage"</span>,qrFilter.outputImage,</div><div class="line">                               <span class="string">@"inputColor0"</span>,[<span class="built_in">CIColor</span> colorWithCGColor:onColor.CGColor],</div><div class="line">                               <span class="string">@"inputColor1"</span>,[<span class="built_in">CIColor</span> colorWithCGColor:offColor.CGColor],</div><div class="line">                               <span class="literal">nil</span>];</div><div class="line"></div><div class="line">      <span class="built_in">CIImage</span> *qrImage = colorFilter.outputImage;</div><div class="line">      <span class="built_in">CGImageRef</span> cgImage = [[<span class="built_in">CIContext</span> contextWithOptions:<span class="literal">nil</span>] createCGImage:qrImage fromRect:qrImage.extent];</div><div class="line">      <span class="built_in">UIGraphicsBeginImageContext</span>(size);</div><div class="line">      <span class="built_in">CGContextRef</span> context = <span class="built_in">UIGraphicsGetCurrentContext</span>();</div><div class="line">      <span class="built_in">CGContextSetInterpolationQuality</span>(context, kCGInterpolationNone);</div><div class="line">      <span class="built_in">CGContextScaleCTM</span>(context, <span class="number">1.0</span>, <span class="number">-1.0</span>);</div><div class="line">      <span class="built_in">CGContextDrawImage</span>(context, <span class="built_in">CGContextGetClipBoundingBox</span>(context), cgImage);</div><div class="line">      codeImage = <span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class="line">      <span class="built_in">UIGraphicsEndImageContext</span>(); </div><div class="line">      <span class="built_in">CGImageRelease</span>(cgImage);</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">          codeImage = [QRCodeGenerator qrImageForString:content imageSize:size.width];</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> codeImage;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p><p><code>iOS8</code>以下使用<code>libqrencode</code>库来生成二维码图片。</p><h4 id="代码完善"><a href="#代码完善" class="headerlink" title="代码完善"></a>代码完善</h4><p><code>2015年12月11日</code> </p><p><code>QA</code>测试发现，服务端生成的二维码，使用<code>ZBar</code>识别不出来，但将这张图片保存到相册，然后发送就可以识别出来。最初的想法是要服务端修改生成的二维码，但安卓能够识别出来，此路不通，那只有看ZBar的源码了。<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">id</span> &lt;<span class="built_in">NSFastEnumeration</span>&gt;) scanImage: (<span class="built_in">CGImageRef</span>) image &#123;</div><div class="line">        timer_start;</div><div class="line">        <span class="keyword">int</span> nsyms = [<span class="keyword">self</span> scanImage: image</div><div class="line">                          withScaling: <span class="number">0</span>];</div><div class="line">      <span class="comment">//没有识别出来，判断CGImageRef对象的宽和高是否大于640，大于或等于的话进行缩放再进行扫描</span></div><div class="line">        <span class="keyword">if</span>(!nsyms &amp;&amp;</div><div class="line">           <span class="built_in">CGImageGetWidth</span>(image) &gt;= <span class="number">640</span> &amp;&amp;</div><div class="line">           <span class="built_in">CGImageGetHeight</span>(image) &gt;= <span class="number">640</span>)</div><div class="line">            <span class="comment">// make one more attempt for close up, grainy images</span></div><div class="line">            nsyms = [<span class="keyword">self</span> scanImage: image</div><div class="line">                          withScaling: <span class="number">.5</span>];</div><div class="line"></div><div class="line">        <span class="built_in">NSMutableArray</span> *syms = <span class="literal">nil</span>;</div><div class="line">        <span class="keyword">if</span>(nsyms) &#123;</div><div class="line">            <span class="comment">// quality/type filtering</span></div><div class="line">            <span class="keyword">int</span> max_quality = MIN_QUALITY;</div><div class="line">            <span class="keyword">for</span>(ZBarSymbol *sym <span class="keyword">in</span> scanner.results) &#123;</div><div class="line">                zbar_symbol_type_t type = sym.type;</div><div class="line">                <span class="keyword">int</span> quality;</div><div class="line">                <span class="keyword">if</span>(type == ZBAR_QRCODE)</div><div class="line">                    quality = INT_MAX;</div><div class="line">                <span class="keyword">else</span></div><div class="line">                    quality = sym.quality;</div><div class="line"></div><div class="line">                <span class="keyword">if</span>(quality &lt; max_quality) &#123;</div><div class="line">                    zlog(<span class="string">@"    type=%d quality=%d &lt; %d\n"</span>,</div><div class="line">                         type, quality, max_quality);</div><div class="line">                    <span class="keyword">continue</span>;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span>(max_quality &lt; quality) &#123;</div><div class="line">                    max_quality = quality;</div><div class="line">                    <span class="keyword">if</span>(syms)</div><div class="line">                        [syms removeAllObjects];</div><div class="line">                &#125;</div><div class="line">                zlog(<span class="string">@"    type=%d quality=%d\n"</span>, type, quality);</div><div class="line">                <span class="keyword">if</span>(!syms)</div><div class="line">                    syms = [<span class="built_in">NSMutableArray</span> arrayWithCapacity: <span class="number">1</span>];</div><div class="line"></div><div class="line">                [syms addObject: sym];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        zlog(<span class="string">@"read %d filtered symbols in %gs total\n"</span>,</div><div class="line">              (!syms) ? <span class="number">0</span> : [syms count], timer_elapsed(t_start, timer_now()));</div><div class="line">        <span class="keyword">return</span>(syms);</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span>(max_quality &lt; quality) &#123;</div><div class="line">          max_quality = quality;</div><div class="line">          <span class="keyword">if</span>(syms)</div><div class="line">              [syms removeAllObjects];</div><div class="line">      &#125;</div><div class="line">      zlog(<span class="string">@"    type=%d quality=%d\n"</span>, type, quality);</div><div class="line">      <span class="keyword">if</span>(!syms)</div><div class="line">          syms = [<span class="built_in">NSMutableArray</span> arrayWithCapacity: <span class="number">1</span>];</div><div class="line"></div><div class="line">      [syms addObject: sym];</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">  zlog(<span class="string">@"read %d filtered symbols in %gs total\n"</span>,</div><div class="line">        (!syms) ? <span class="number">0</span> : [syms count], timer_elapsed(t_start, timer_now()));</div><div class="line">  <span class="keyword">return</span>(syms);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>在这里就产生了一个解决有些二维码图片识别不出来的解决思路：将传过来的<code>UIImage</code>的宽和高设置为640，识别不出来再进行缩放识别。修改<code>UIImage</code>的代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">-(<span class="built_in">UIImage</span> *)TransformtoSize:(<span class="built_in">CGSize</span>)Newsize &#123;</div><div class="line">    <span class="comment">// 创建一个bitmap的context</span></div><div class="line">    <span class="built_in">UIGraphicsBeginImageContext</span>(Newsize);</div><div class="line">    <span class="comment">// 绘制改变大小的图片</span></div><div class="line">    [<span class="keyword">self</span> drawInRect:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, Newsize.width, Newsize.height)];</div><div class="line">    <span class="comment">// 从当前context中创建一个改变大小后的图片</span></div><div class="line">    <span class="built_in">UIImage</span> *TransformedImg=<span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</div><div class="line">    <span class="comment">// 使当前的context出堆栈</span></div><div class="line">    <span class="built_in">UIGraphicsEndImageContext</span>();</div><div class="line">    <span class="comment">// 返回新的改变大小后的图片</span></div><div class="line">    <span class="keyword">return</span> TransformedImg;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这样类似于将<code>ZXing</code>中的<code>tryHard</code>设置为<code>YES</code>。识别不出来的二维码图片就可以识别了。</p><p><code>2016年5月20日</code><br><code>遗留的bug</code>: 点击进入扫一扫界面，退出，再进入，这样重复5次左右，扫一扫之前的界面的会出现卡顿。<br>原因：多次进入扫一扫界面，再退出，因此界面未被系统回收，captureSession对象一直在运行，会造成内存泄露，引起上一个界面卡顿。<br>解决方案：在视图将要消失的时候，确保captureSession对象停止运行。<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewWillDisappear:(<span class="built_in">BOOL</span>)animated &#123;</div><div class="line">  [<span class="keyword">super</span> viewWillDisappear:animated];</div><div class="line">  <span class="keyword">if</span> ([<span class="keyword">self</span>.captureSession isRunning]) &#123;</div><div class="line">      [<span class="keyword">self</span>.captureSession stopRunning];</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>源码和demo请点<a href="https://github.com/hua16/QRCodeDemo.git" target="_blank" rel="external">这里</a><br>参考的文章链接如下<br><a href="http://adad184.com/2015/09/30/goodbye-zxing/" target="_blank" rel="external">再见ZXing 使用系统原生代码处理QRCode</a><br><a href="http://blog.cnbluebox.com/blog/2014/08/26/ioser-wei-ma-sao-miao/" target="_blank" rel="external">IOS二维码扫描,你需要注意的两件事</a><br><a href="http://blog.csdn.net/u013738531/article/details/54574262" target="_blank" rel="external"><a href="http://blog.csdn.net/u013738531/article/details/54574262" target="_blank" rel="external">Zbar算法流程介绍</a></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前做过一个关于二维码的组件，已发布，现总结下。&lt;br&gt;开发的&lt;code&gt;APP&lt;/code&gt;所需支持的最低版本为&lt;code&gt;8.0&lt;/code&gt;，最初的方案为扫描使用苹果自带的&lt;code&gt;API&lt;/code&gt;实现扫一扫的功能、使用&lt;code&gt;ZXing&lt;/code&gt;识别从
      
    
    </summary>
    
      <category term="iOS 开发" scheme="http://www.leverTsui.com/categories/iOS-%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="二维码 图片识别" scheme="http://www.leverTsui.com/tags/%E4%BA%8C%E7%BB%B4%E7%A0%81-%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
</feed>
